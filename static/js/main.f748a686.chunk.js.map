{"version":3,"sources":["components/filter/Filter.module.css","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","style","form","this","title","input","type","onChange","pattern","required","addContact","Component","ContactList","contacts","handleDelete","styles","list","map","id","deleteContact","onClick","Filter","filter","App","some","item","alert","newContact","uuid","prevState","contact","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","formattedFilter","toLowerCase","trim","filteredContacts","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f748a686.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__3HpQc\",\"input\":\"Filter_input__3K0YO\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n  onSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.handleSubmit(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <div>\n        <form className={style.form} onSubmit={this.onSubmit}>\n          <label className={style.title}>\n            Name\n            <input\n              className={style.input}\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label className={style.title}>\n            Number\n            <input\n              className={style.input}\n              type=\"tel\"\n              name=\"number\"\n              onChange={this.handleChange}\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button className={style.addContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.deleteContact}\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <label className={styles.title}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    console.log(\"[componentDidMount]\");\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      const parsedContacts = JSON.parse(contacts);\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"[componentDidUpdate]\");\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleSubmit = (name, number) => {\n    const isDuplicate = this.state.contacts.some((item) => item.name === name);\n    if (isDuplicate) {\n      alert(\"Такой контакт уже существует \" + name);\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n\n    this.setState((prevState) => {\n      const newContacts = [newContact, ...prevState.contacts];\n      return { contacts: newContacts };\n    });\n  };\n\n  handleDelete = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const formattedFilter = filter.toLowerCase().trim();\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(formattedFilter)\n    );\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        {contacts.length ? (\n          <>\n            <h2>Contacts</h2>\n            <Filter filter={filter} handleChange={this.handleChange} />\n            <ContactList\n              contacts={filteredContacts}\n              handleDelete={this.handleDelete}\n            />\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"title\":\"ContactForm_title__3NFNu\",\"input\":\"ContactForm_input__2u7Lv\",\"addContact\":\"ContactForm_addContact__2i8KS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteContact\":\"ContactList_deleteContact__1bB5N\",\"list\":\"ContactList_list__2K4PC\"};"],"sourceRoot":""}